{"ast":null,"code":"import { AptosNetwork, AptosAddress, AptosNetworkResolver } from '@moralisweb3/common-aptos-utils';\nimport { maybe } from '@moralisweb3/common-core';\nimport { EvmChain, EvmAddress, EvmChainResolver } from '@moralisweb3/common-evm-utils';\nimport { SolNetwork, SolAddress } from '@moralisweb3/common-sol-utils';\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nvar verifyChallengeAptosOperation = {\n  method: 'POST',\n  name: 'verifyChallengeAptos',\n  id: 'verifyChallengeAptos',\n  groupName: 'aptos',\n  urlPathPattern: '/challenge/verify/aptos',\n  bodyParamNames: ['message', 'signature'],\n  bodyType: 'properties',\n  getRequestUrlParams: getRequestUrlParams$a,\n  getRequestBody: getRequestBody$9,\n  serializeRequest: serializeRequest$a,\n  deserializeRequest: deserializeRequest$a,\n  deserializeResponse: deserializeResponse$a\n};\n// Methods\nfunction getRequestUrlParams$a() {\n  return {};\n}\nfunction getRequestBody$9(request) {\n  return {\n    message: request.message,\n    signature: request.signature\n  };\n}\nfunction deserializeResponse$a(_a) {\n  var network = _a.network,\n    jsonResponse = __rest(_a, [\"network\"]);\n  return __assign(__assign({}, jsonResponse), {\n    network: AptosNetwork.create(network),\n    address: AptosAddress.create(jsonResponse.address),\n    expirationTime: maybe(jsonResponse.expirationTime, function (value) {\n      return new Date(value);\n    }),\n    notBefore: maybe(jsonResponse.notBefore, function (value) {\n      return new Date(value);\n    })\n  });\n}\nfunction serializeRequest$a(request) {\n  return {\n    message: request.message,\n    signature: request.signature\n  };\n}\nfunction deserializeRequest$a(jsonRequest) {\n  return {\n    message: jsonRequest.message,\n    signature: jsonRequest.signature\n  };\n}\n\n/** The back channel challenge containing the id to store on the api and the message to be signed by the user */\nvar requestChallengeAptosOperation = {\n  method: 'POST',\n  name: 'requestChallengeAptos',\n  id: 'requestChallengeAptos',\n  groupName: 'aptos',\n  urlPathPattern: '/challenge/request/aptos',\n  bodyParamNames: ['domain', 'network', 'address', 'statement', 'uri', 'expirationTime', 'notBefore', 'resources', 'timeout', 'publicKey'],\n  bodyType: 'properties',\n  getRequestUrlParams: getRequestUrlParams$9,\n  getRequestBody: getRequestBody$8,\n  serializeRequest: serializeRequest$9,\n  deserializeRequest: deserializeRequest$9,\n  deserializeResponse: deserializeResponse$9\n};\n// Methods\nfunction getRequestUrlParams$9() {\n  return {};\n}\nfunction getRequestBody$8(request) {\n  return {\n    domain: request.domain,\n    network: AptosNetwork.create(request.network).toString(),\n    address: AptosAddress.create(request.address).toString(),\n    publicKey: request.publicKey,\n    statement: request.statement,\n    uri: request.uri,\n    expirationTime: request.expirationTime,\n    notBefore: request.notBefore,\n    resources: request.resources,\n    timeout: request.timeout\n  };\n}\nfunction deserializeResponse$9(jsonResponse) {\n  return jsonResponse;\n}\nfunction serializeRequest$9(request, core) {\n  return {\n    domain: request.domain,\n    network: AptosNetworkResolver.resolve(request.network, core),\n    address: AptosAddress.create(request.address).toString(),\n    publicKey: request.publicKey,\n    statement: request.statement,\n    uri: request.uri,\n    expirationTime: request.expirationTime,\n    notBefore: request.notBefore,\n    resources: request.resources,\n    timeout: request.timeout\n  };\n}\nfunction deserializeRequest$9(jsonRequest) {\n  return {\n    domain: jsonRequest.domain,\n    network: AptosNetwork.create(jsonRequest.network),\n    address: AptosAddress.create(jsonRequest.address),\n    publicKey: jsonRequest.publicKey,\n    statement: jsonRequest.statement,\n    uri: jsonRequest.uri,\n    expirationTime: jsonRequest.expirationTime,\n    notBefore: jsonRequest.notBefore,\n    resources: jsonRequest.resources,\n    timeout: jsonRequest.timeout\n  };\n}\nvar verifyChallengeEvmOperation = {\n  method: 'POST',\n  name: 'verifyChallengeEvm',\n  id: 'verifyChallengeEvm',\n  groupName: 'evm',\n  urlPathPattern: '/challenge/verify/evm',\n  bodyParamNames: ['message', 'signature'],\n  bodyType: 'properties',\n  getRequestUrlParams: getRequestUrlParams$8,\n  getRequestBody: getRequestBody$7,\n  serializeRequest: serializeRequest$8,\n  deserializeRequest: deserializeRequest$8,\n  deserializeResponse: deserializeResponse$8\n};\n// Methods\nfunction getRequestUrlParams$8() {\n  return {};\n}\nfunction getRequestBody$7(request) {\n  return {\n    message: request.message,\n    signature: request.signature\n  };\n}\nfunction deserializeResponse$8(_a) {\n  var chainId = _a.chainId,\n    jsonResponse = __rest(_a, [\"chainId\"]);\n  return __assign(__assign({}, jsonResponse), {\n    chain: EvmChain.create(chainId),\n    address: EvmAddress.create(jsonResponse.address),\n    expirationTime: maybe(jsonResponse.expirationTime, function (value) {\n      return new Date(value);\n    }),\n    notBefore: maybe(jsonResponse.notBefore, function (value) {\n      return new Date(value);\n    })\n  });\n}\nfunction serializeRequest$8(request) {\n  return {\n    message: request.message,\n    signature: request.signature\n  };\n}\nfunction deserializeRequest$8(jsonRequest) {\n  return {\n    message: jsonRequest.message,\n    signature: jsonRequest.signature\n  };\n}\n\n/** The back channel challenge containing the id to store on the api and the message to be signed by the user */\nvar requestChallengeEvmOperation = {\n  method: 'POST',\n  name: 'requestChallengeEvm',\n  id: 'requestChallengeEvm',\n  groupName: 'evm',\n  urlPathPattern: '/challenge/request/evm',\n  bodyParamNames: ['domain', 'chainId', 'address', 'statement', 'uri', 'expirationTime', 'notBefore', 'resources', 'timeout'],\n  bodyType: 'properties',\n  getRequestUrlParams: getRequestUrlParams$7,\n  getRequestBody: getRequestBody$6,\n  serializeRequest: serializeRequest$7,\n  deserializeRequest: deserializeRequest$7,\n  deserializeResponse: deserializeResponse$7\n};\n// Methods\nfunction getRequestUrlParams$7() {\n  return {};\n}\nfunction getRequestBody$6(request, core) {\n  return {\n    domain: request.domain,\n    chainId: EvmChainResolver.resolve(request.chainId, core).hex,\n    address: EvmAddress.create(request.address).checksum,\n    statement: request.statement,\n    uri: request.uri,\n    expirationTime: request.expirationTime,\n    notBefore: request.notBefore,\n    resources: request.resources,\n    timeout: request.timeout\n  };\n}\nfunction deserializeResponse$7(jsonResponse) {\n  return jsonResponse;\n}\nfunction serializeRequest$7(request, core) {\n  return {\n    domain: request.domain,\n    chainId: EvmChainResolver.resolve(request.chainId, core).decimal.toString(),\n    address: EvmAddress.create(request.address).checksum,\n    statement: request.statement,\n    uri: request.uri,\n    expirationTime: request.expirationTime,\n    notBefore: request.notBefore,\n    resources: request.resources,\n    timeout: request.timeout\n  };\n}\nfunction deserializeRequest$7(jsonRequest, core) {\n  return {\n    domain: jsonRequest.domain,\n    chainId: EvmChainResolver.resolve(jsonRequest.chainId, core),\n    address: EvmAddress.create(jsonRequest.address),\n    statement: jsonRequest.statement,\n    uri: jsonRequest.uri,\n    expirationTime: jsonRequest.expirationTime,\n    notBefore: jsonRequest.notBefore,\n    resources: jsonRequest.resources,\n    timeout: jsonRequest.timeout\n  };\n}\nvar getAddressesOperation = {\n  method: 'GET',\n  name: 'getAddresses',\n  id: 'getAddresses',\n  groupName: 'evm',\n  urlPathPattern: '/profile/{profileId}/addresses',\n  urlPathParamNames: ['profileId'],\n  getRequestUrlParams: getRequestUrlParams$6,\n  serializeRequest: serializeRequest$6,\n  deserializeRequest: deserializeRequest$6,\n  deserializeResponse: deserializeResponse$6\n};\n// Methods\nfunction getRequestUrlParams$6(request) {\n  return {\n    profileId: request.profileId\n  };\n}\nfunction deserializeResponse$6(jsonResponse) {\n  return jsonResponse;\n}\nfunction serializeRequest$6(request) {\n  return request;\n}\nfunction deserializeRequest$6(jsonRequest) {\n  return jsonRequest;\n}\nvar removeBindOperation = {\n  method: 'POST',\n  name: 'removeBind',\n  id: 'removeBind',\n  groupName: 'evm',\n  urlPathPattern: '/bind/remove',\n  bodyParamNames: ['blockchainType', 'address', 'profileId', 'publicKey'],\n  bodyType: 'properties',\n  getRequestUrlParams: getRequestUrlParams$5,\n  getRequestBody: getRequestBody$5,\n  serializeRequest: serializeRequest$5,\n  deserializeRequest: deserializeRequest$5,\n  deserializeResponse: deserializeResponse$5\n};\n// Methods\nfunction getRequestUrlParams$5() {\n  return {};\n}\nfunction getRequestBody$5(request) {\n  return {\n    blockchainType: request.blockchainType,\n    address: EvmAddress.create(request.address).checksum,\n    profileId: request.profileId,\n    publicKey: request.publicKey\n  };\n}\nfunction deserializeResponse$5(jsonResponse) {\n  return jsonResponse;\n}\nfunction serializeRequest$5(request) {\n  return {\n    blockchainType: request.blockchainType,\n    address: EvmAddress.create(request.address).checksum,\n    profileId: request.profileId,\n    publicKey: request.publicKey\n  };\n}\nfunction deserializeRequest$5(jsonRequest) {\n  return {\n    blockchainType: jsonRequest.blockchainType,\n    address: EvmAddress.create(jsonRequest.address),\n    profileId: jsonRequest.profileId,\n    publicKey: jsonRequest.publicKey\n  };\n}\nvar requestBindOperation = {\n  method: 'POST',\n  name: 'requestBind',\n  id: 'requestBind',\n  groupName: 'evm',\n  urlPathPattern: '/bind/request',\n  bodyParamNames: ['addresses'],\n  bodyType: 'properties',\n  getRequestUrlParams: getRequestUrlParams$4,\n  getRequestBody: getRequestBody$4,\n  serializeRequest: serializeRequest$4,\n  deserializeRequest: deserializeRequest$4,\n  deserializeResponse: deserializeResponse$4\n};\n// Methods\nfunction getRequestUrlParams$4() {\n  return {};\n}\nfunction getRequestBody$4(request) {\n  return {\n    addresses: request.addresses.map(function (address) {\n      return {\n        blockchainType: address.blockchainType,\n        address: EvmAddress.create(address.address).checksum\n      };\n    })\n  };\n}\nfunction deserializeResponse$4(jsonResponse) {\n  return jsonResponse;\n}\nfunction serializeRequest$4(request) {\n  return {\n    addresses: request.addresses.map(function (address) {\n      return {\n        blockchainType: address.blockchainType,\n        address: EvmAddress.create(address.address).checksum\n      };\n    })\n  };\n}\nfunction deserializeRequest$4(jsonRequest) {\n  return {\n    addresses: jsonRequest.addresses.map(function (address) {\n      return {\n        blockchainType: address.blockchainType,\n        address: EvmAddress.create(address.address)\n      };\n    })\n  };\n}\nvar verifyRemoveBindOperation = {\n  method: 'POST',\n  name: 'verifyRemoveBind',\n  id: 'verifyRemoveBind',\n  groupName: 'evm',\n  urlPathPattern: '/bind/remove/verify',\n  bodyParamNames: ['message', 'signature'],\n  bodyType: 'properties',\n  getRequestUrlParams: getRequestUrlParams$3,\n  getRequestBody: getRequestBody$3,\n  serializeRequest: serializeRequest$3,\n  deserializeRequest: deserializeRequest$3,\n  deserializeResponse: deserializeResponse$3\n};\n// Methods\nfunction getRequestUrlParams$3() {\n  return {};\n}\nfunction getRequestBody$3(request) {\n  return {\n    message: request.message,\n    signature: request.signature\n  };\n}\nfunction deserializeResponse$3(jsonResponse) {\n  return jsonResponse;\n}\nfunction serializeRequest$3(request) {\n  return {\n    message: request.message,\n    signature: request.signature\n  };\n}\nfunction deserializeRequest$3(jsonRequest) {\n  return {\n    message: jsonRequest.message,\n    signature: jsonRequest.signature\n  };\n}\nvar verifyRequestBindOperation = {\n  method: 'POST',\n  name: 'verifyRequestBind',\n  id: 'verifyRequestBind',\n  groupName: 'evm',\n  urlPathPattern: '/bind/request/verify',\n  bodyParamNames: ['verifications'],\n  bodyType: 'properties',\n  getRequestUrlParams: getRequestUrlParams$2,\n  getRequestBody: getRequestBody$2,\n  serializeRequest: serializeRequest$2,\n  deserializeRequest: deserializeRequest$2,\n  deserializeResponse: deserializeResponse$2\n};\n// Methods\nfunction getRequestUrlParams$2() {\n  return {};\n}\nfunction getRequestBody$2(request) {\n  return {\n    verifications: request.verifications\n  };\n}\nfunction deserializeResponse$2(jsonResponse) {\n  return jsonResponse;\n}\nfunction serializeRequest$2(request) {\n  return {\n    verifications: request.verifications\n  };\n}\nfunction deserializeRequest$2(jsonRequest) {\n  return {\n    verifications: jsonRequest.verifications\n  };\n}\nvar verifyChallengeSolanaOperation = {\n  method: 'POST',\n  name: 'verifyChallengeSolana',\n  id: 'verifyChallengeSolana',\n  groupName: 'solana',\n  urlPathPattern: '/challenge/verify/solana',\n  bodyParamNames: ['message', 'signature'],\n  bodyType: 'properties',\n  getRequestUrlParams: getRequestUrlParams$1,\n  getRequestBody: getRequestBody$1,\n  serializeRequest: serializeRequest$1,\n  deserializeRequest: deserializeRequest$1,\n  deserializeResponse: deserializeResponse$1\n};\n// Methods\nfunction getRequestUrlParams$1() {\n  return {};\n}\nfunction getRequestBody$1(request) {\n  return {\n    message: request.message,\n    signature: request.signature\n  };\n}\nfunction deserializeResponse$1(_a) {\n  var network = _a.network,\n    jsonResponse = __rest(_a, [\"network\"]);\n  return __assign(__assign({}, jsonResponse), {\n    solNetwork: SolNetwork.create(network),\n    address: SolAddress.create(jsonResponse.address),\n    expirationTime: maybe(jsonResponse.expirationTime, function (value) {\n      return new Date(value);\n    }),\n    notBefore: maybe(jsonResponse.notBefore, function (value) {\n      return new Date(value);\n    })\n  });\n}\nfunction serializeRequest$1(request) {\n  return {\n    message: request.message,\n    signature: request.signature\n  };\n}\nfunction deserializeRequest$1(jsonRequest) {\n  return {\n    message: jsonRequest.message,\n    signature: jsonRequest.signature\n  };\n}\n\n/** The back channel challenge containing the id to store on the api and the message to be signed by the user */\nvar requestChallengeSolanaOperation = {\n  method: 'POST',\n  name: 'requestChallengeSolana',\n  id: 'requestChallengeSolana',\n  groupName: 'solana',\n  urlPathPattern: '/challenge/request/solana',\n  bodyParamNames: ['domain', 'network', 'address', 'statement', 'uri', 'expirationTime', 'notBefore', 'resources', 'timeout'],\n  bodyType: 'properties',\n  getRequestUrlParams: getRequestUrlParams,\n  getRequestBody: getRequestBody,\n  serializeRequest: serializeRequest,\n  deserializeRequest: deserializeRequest,\n  deserializeResponse: deserializeResponse\n};\n// Methods\nfunction getRequestUrlParams() {\n  return {};\n}\nfunction getRequestBody(request) {\n  return {\n    domain: request.domain,\n    network: SolNetwork.create(request.network).network,\n    address: SolAddress.create(request.address).address,\n    statement: request.statement,\n    uri: request.uri,\n    expirationTime: request.expirationTime,\n    notBefore: request.notBefore,\n    resources: request.resources,\n    timeout: request.timeout\n  };\n}\nfunction deserializeResponse(jsonResponse) {\n  return jsonResponse;\n}\nfunction serializeRequest(request) {\n  return {\n    domain: request.domain,\n    network: SolNetwork.create(request.network).network,\n    address: SolAddress.create(request.address).address,\n    statement: request.statement,\n    uri: request.uri,\n    expirationTime: request.expirationTime,\n    notBefore: request.notBefore,\n    resources: request.resources,\n    timeout: request.timeout\n  };\n}\nfunction deserializeRequest(jsonRequest) {\n  return {\n    domain: jsonRequest.domain,\n    network: SolNetwork.create(jsonRequest.network),\n    address: SolAddress.create(jsonRequest.address),\n    statement: jsonRequest.statement,\n    uri: jsonRequest.uri,\n    expirationTime: jsonRequest.expirationTime,\n    notBefore: jsonRequest.notBefore,\n    resources: jsonRequest.resources,\n    timeout: jsonRequest.timeout\n  };\n}\nvar operations = [requestChallengeSolanaOperation, requestChallengeEvmOperation, requestChallengeAptosOperation, verifyChallengeSolanaOperation, verifyChallengeEvmOperation, verifyChallengeAptosOperation, getAddressesOperation, removeBindOperation, requestBindOperation, verifyRemoveBindOperation, verifyRequestBindOperation];\nexport { getAddressesOperation, operations, removeBindOperation, requestBindOperation, requestChallengeAptosOperation, requestChallengeEvmOperation, requestChallengeSolanaOperation, verifyChallengeAptosOperation, verifyChallengeEvmOperation, verifyChallengeSolanaOperation, verifyRemoveBindOperation, verifyRequestBindOperation };","map":{"version":3,"names":["AptosNetwork","AptosAddress","AptosNetworkResolver","maybe","EvmChain","EvmAddress","EvmChainResolver","SolNetwork","SolAddress","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","verifyChallengeAptosOperation","method","name","id","groupName","urlPathPattern","bodyParamNames","bodyType","getRequestUrlParams","getRequestUrlParams$a","getRequestBody","getRequestBody$9","serializeRequest","serializeRequest$a","deserializeRequest","deserializeRequest$a","deserializeResponse","deserializeResponse$a","request","message","signature","_a","network","jsonResponse","create","address","expirationTime","value","Date","notBefore","jsonRequest","requestChallengeAptosOperation","getRequestUrlParams$9","getRequestBody$8","serializeRequest$9","deserializeRequest$9","deserializeResponse$9","domain","toString","publicKey","statement","uri","resources","timeout","core","resolve","verifyChallengeEvmOperation","getRequestUrlParams$8","getRequestBody$7","serializeRequest$8","deserializeRequest$8","deserializeResponse$8","chainId","chain","requestChallengeEvmOperation","getRequestUrlParams$7","getRequestBody$6","serializeRequest$7","deserializeRequest$7","deserializeResponse$7","hex","checksum","decimal","getAddressesOperation","urlPathParamNames","getRequestUrlParams$6","serializeRequest$6","deserializeRequest$6","deserializeResponse$6","profileId","removeBindOperation","getRequestUrlParams$5","getRequestBody$5","serializeRequest$5","deserializeRequest$5","deserializeResponse$5","blockchainType","requestBindOperation","getRequestUrlParams$4","getRequestBody$4","serializeRequest$4","deserializeRequest$4","deserializeResponse$4","addresses","map","verifyRemoveBindOperation","getRequestUrlParams$3","getRequestBody$3","serializeRequest$3","deserializeRequest$3","deserializeResponse$3","verifyRequestBindOperation","getRequestUrlParams$2","getRequestBody$2","serializeRequest$2","deserializeRequest$2","deserializeResponse$2","verifications","verifyChallengeSolanaOperation","getRequestUrlParams$1","getRequestBody$1","serializeRequest$1","deserializeRequest$1","deserializeResponse$1","solNetwork","requestChallengeSolanaOperation","operations"],"sources":["C:/Users/user/Desktop/Social-Accenture/Learning-platform/node_modules/@moralisweb3/common-auth-utils/lib/esm/index.js"],"sourcesContent":["import { AptosNetwork, AptosAddress, AptosNetworkResolver } from '@moralisweb3/common-aptos-utils';\nimport { maybe } from '@moralisweb3/common-core';\nimport { EvmChain, EvmAddress, EvmChainResolver } from '@moralisweb3/common-evm-utils';\nimport { SolNetwork, SolAddress } from '@moralisweb3/common-sol-utils';\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nvar verifyChallengeAptosOperation = {\r\n    method: 'POST',\r\n    name: 'verifyChallengeAptos',\r\n    id: 'verifyChallengeAptos',\r\n    groupName: 'aptos',\r\n    urlPathPattern: '/challenge/verify/aptos',\r\n    bodyParamNames: ['message', 'signature'],\r\n    bodyType: 'properties',\r\n    getRequestUrlParams: getRequestUrlParams$a,\r\n    getRequestBody: getRequestBody$9,\r\n    serializeRequest: serializeRequest$a,\r\n    deserializeRequest: deserializeRequest$a,\r\n    deserializeResponse: deserializeResponse$a,\r\n};\r\n// Methods\r\nfunction getRequestUrlParams$a() {\r\n    return {};\r\n}\r\nfunction getRequestBody$9(request) {\r\n    return {\r\n        message: request.message,\r\n        signature: request.signature,\r\n    };\r\n}\r\nfunction deserializeResponse$a(_a) {\r\n    var network = _a.network, jsonResponse = __rest(_a, [\"network\"]);\r\n    return __assign(__assign({}, jsonResponse), { network: AptosNetwork.create(network), address: AptosAddress.create(jsonResponse.address), expirationTime: maybe(jsonResponse.expirationTime, function (value) { return new Date(value); }), notBefore: maybe(jsonResponse.notBefore, function (value) { return new Date(value); }) });\r\n}\r\nfunction serializeRequest$a(request) {\r\n    return {\r\n        message: request.message,\r\n        signature: request.signature,\r\n    };\r\n}\r\nfunction deserializeRequest$a(jsonRequest) {\r\n    return {\r\n        message: jsonRequest.message,\r\n        signature: jsonRequest.signature,\r\n    };\r\n}\n\n/** The back channel challenge containing the id to store on the api and the message to be signed by the user */\r\nvar requestChallengeAptosOperation = {\r\n    method: 'POST',\r\n    name: 'requestChallengeAptos',\r\n    id: 'requestChallengeAptos',\r\n    groupName: 'aptos',\r\n    urlPathPattern: '/challenge/request/aptos',\r\n    bodyParamNames: [\r\n        'domain',\r\n        'network',\r\n        'address',\r\n        'statement',\r\n        'uri',\r\n        'expirationTime',\r\n        'notBefore',\r\n        'resources',\r\n        'timeout',\r\n        'publicKey',\r\n    ],\r\n    bodyType: 'properties',\r\n    getRequestUrlParams: getRequestUrlParams$9,\r\n    getRequestBody: getRequestBody$8,\r\n    serializeRequest: serializeRequest$9,\r\n    deserializeRequest: deserializeRequest$9,\r\n    deserializeResponse: deserializeResponse$9,\r\n};\r\n// Methods\r\nfunction getRequestUrlParams$9() {\r\n    return {};\r\n}\r\nfunction getRequestBody$8(request) {\r\n    return {\r\n        domain: request.domain,\r\n        network: AptosNetwork.create(request.network).toString(),\r\n        address: AptosAddress.create(request.address).toString(),\r\n        publicKey: request.publicKey,\r\n        statement: request.statement,\r\n        uri: request.uri,\r\n        expirationTime: request.expirationTime,\r\n        notBefore: request.notBefore,\r\n        resources: request.resources,\r\n        timeout: request.timeout,\r\n    };\r\n}\r\nfunction deserializeResponse$9(jsonResponse) {\r\n    return jsonResponse;\r\n}\r\nfunction serializeRequest$9(request, core) {\r\n    return {\r\n        domain: request.domain,\r\n        network: AptosNetworkResolver.resolve(request.network, core),\r\n        address: AptosAddress.create(request.address).toString(),\r\n        publicKey: request.publicKey,\r\n        statement: request.statement,\r\n        uri: request.uri,\r\n        expirationTime: request.expirationTime,\r\n        notBefore: request.notBefore,\r\n        resources: request.resources,\r\n        timeout: request.timeout,\r\n    };\r\n}\r\nfunction deserializeRequest$9(jsonRequest) {\r\n    return {\r\n        domain: jsonRequest.domain,\r\n        network: AptosNetwork.create(jsonRequest.network),\r\n        address: AptosAddress.create(jsonRequest.address),\r\n        publicKey: jsonRequest.publicKey,\r\n        statement: jsonRequest.statement,\r\n        uri: jsonRequest.uri,\r\n        expirationTime: jsonRequest.expirationTime,\r\n        notBefore: jsonRequest.notBefore,\r\n        resources: jsonRequest.resources,\r\n        timeout: jsonRequest.timeout,\r\n    };\r\n}\n\nvar verifyChallengeEvmOperation = {\r\n    method: 'POST',\r\n    name: 'verifyChallengeEvm',\r\n    id: 'verifyChallengeEvm',\r\n    groupName: 'evm',\r\n    urlPathPattern: '/challenge/verify/evm',\r\n    bodyParamNames: ['message', 'signature'],\r\n    bodyType: 'properties',\r\n    getRequestUrlParams: getRequestUrlParams$8,\r\n    getRequestBody: getRequestBody$7,\r\n    serializeRequest: serializeRequest$8,\r\n    deserializeRequest: deserializeRequest$8,\r\n    deserializeResponse: deserializeResponse$8,\r\n};\r\n// Methods\r\nfunction getRequestUrlParams$8() {\r\n    return {};\r\n}\r\nfunction getRequestBody$7(request) {\r\n    return {\r\n        message: request.message,\r\n        signature: request.signature,\r\n    };\r\n}\r\nfunction deserializeResponse$8(_a) {\r\n    var chainId = _a.chainId, jsonResponse = __rest(_a, [\"chainId\"]);\r\n    return __assign(__assign({}, jsonResponse), { chain: EvmChain.create(chainId), address: EvmAddress.create(jsonResponse.address), expirationTime: maybe(jsonResponse.expirationTime, function (value) { return new Date(value); }), notBefore: maybe(jsonResponse.notBefore, function (value) { return new Date(value); }) });\r\n}\r\nfunction serializeRequest$8(request) {\r\n    return {\r\n        message: request.message,\r\n        signature: request.signature,\r\n    };\r\n}\r\nfunction deserializeRequest$8(jsonRequest) {\r\n    return {\r\n        message: jsonRequest.message,\r\n        signature: jsonRequest.signature,\r\n    };\r\n}\n\n/** The back channel challenge containing the id to store on the api and the message to be signed by the user */\r\nvar requestChallengeEvmOperation = {\r\n    method: 'POST',\r\n    name: 'requestChallengeEvm',\r\n    id: 'requestChallengeEvm',\r\n    groupName: 'evm',\r\n    urlPathPattern: '/challenge/request/evm',\r\n    bodyParamNames: [\r\n        'domain',\r\n        'chainId',\r\n        'address',\r\n        'statement',\r\n        'uri',\r\n        'expirationTime',\r\n        'notBefore',\r\n        'resources',\r\n        'timeout',\r\n    ],\r\n    bodyType: 'properties',\r\n    getRequestUrlParams: getRequestUrlParams$7,\r\n    getRequestBody: getRequestBody$6,\r\n    serializeRequest: serializeRequest$7,\r\n    deserializeRequest: deserializeRequest$7,\r\n    deserializeResponse: deserializeResponse$7,\r\n};\r\n// Methods\r\nfunction getRequestUrlParams$7() {\r\n    return {};\r\n}\r\nfunction getRequestBody$6(request, core) {\r\n    return {\r\n        domain: request.domain,\r\n        chainId: EvmChainResolver.resolve(request.chainId, core).hex,\r\n        address: EvmAddress.create(request.address).checksum,\r\n        statement: request.statement,\r\n        uri: request.uri,\r\n        expirationTime: request.expirationTime,\r\n        notBefore: request.notBefore,\r\n        resources: request.resources,\r\n        timeout: request.timeout,\r\n    };\r\n}\r\nfunction deserializeResponse$7(jsonResponse) {\r\n    return jsonResponse;\r\n}\r\nfunction serializeRequest$7(request, core) {\r\n    return {\r\n        domain: request.domain,\r\n        chainId: EvmChainResolver.resolve(request.chainId, core).decimal.toString(),\r\n        address: EvmAddress.create(request.address).checksum,\r\n        statement: request.statement,\r\n        uri: request.uri,\r\n        expirationTime: request.expirationTime,\r\n        notBefore: request.notBefore,\r\n        resources: request.resources,\r\n        timeout: request.timeout,\r\n    };\r\n}\r\nfunction deserializeRequest$7(jsonRequest, core) {\r\n    return {\r\n        domain: jsonRequest.domain,\r\n        chainId: EvmChainResolver.resolve(jsonRequest.chainId, core),\r\n        address: EvmAddress.create(jsonRequest.address),\r\n        statement: jsonRequest.statement,\r\n        uri: jsonRequest.uri,\r\n        expirationTime: jsonRequest.expirationTime,\r\n        notBefore: jsonRequest.notBefore,\r\n        resources: jsonRequest.resources,\r\n        timeout: jsonRequest.timeout,\r\n    };\r\n}\n\nvar getAddressesOperation = {\r\n    method: 'GET',\r\n    name: 'getAddresses',\r\n    id: 'getAddresses',\r\n    groupName: 'evm',\r\n    urlPathPattern: '/profile/{profileId}/addresses',\r\n    urlPathParamNames: ['profileId'],\r\n    getRequestUrlParams: getRequestUrlParams$6,\r\n    serializeRequest: serializeRequest$6,\r\n    deserializeRequest: deserializeRequest$6,\r\n    deserializeResponse: deserializeResponse$6,\r\n};\r\n// Methods\r\nfunction getRequestUrlParams$6(request) {\r\n    return {\r\n        profileId: request.profileId,\r\n    };\r\n}\r\nfunction deserializeResponse$6(jsonResponse) {\r\n    return jsonResponse;\r\n}\r\nfunction serializeRequest$6(request) {\r\n    return request;\r\n}\r\nfunction deserializeRequest$6(jsonRequest) {\r\n    return jsonRequest;\r\n}\n\nvar removeBindOperation = {\r\n    method: 'POST',\r\n    name: 'removeBind',\r\n    id: 'removeBind',\r\n    groupName: 'evm',\r\n    urlPathPattern: '/bind/remove',\r\n    bodyParamNames: ['blockchainType', 'address', 'profileId', 'publicKey'],\r\n    bodyType: 'properties',\r\n    getRequestUrlParams: getRequestUrlParams$5,\r\n    getRequestBody: getRequestBody$5,\r\n    serializeRequest: serializeRequest$5,\r\n    deserializeRequest: deserializeRequest$5,\r\n    deserializeResponse: deserializeResponse$5,\r\n};\r\n// Methods\r\nfunction getRequestUrlParams$5() {\r\n    return {};\r\n}\r\nfunction getRequestBody$5(request) {\r\n    return {\r\n        blockchainType: request.blockchainType,\r\n        address: EvmAddress.create(request.address).checksum,\r\n        profileId: request.profileId,\r\n        publicKey: request.publicKey,\r\n    };\r\n}\r\nfunction deserializeResponse$5(jsonResponse) {\r\n    return jsonResponse;\r\n}\r\nfunction serializeRequest$5(request) {\r\n    return {\r\n        blockchainType: request.blockchainType,\r\n        address: EvmAddress.create(request.address).checksum,\r\n        profileId: request.profileId,\r\n        publicKey: request.publicKey,\r\n    };\r\n}\r\nfunction deserializeRequest$5(jsonRequest) {\r\n    return {\r\n        blockchainType: jsonRequest.blockchainType,\r\n        address: EvmAddress.create(jsonRequest.address),\r\n        profileId: jsonRequest.profileId,\r\n        publicKey: jsonRequest.publicKey,\r\n    };\r\n}\n\nvar requestBindOperation = {\r\n    method: 'POST',\r\n    name: 'requestBind',\r\n    id: 'requestBind',\r\n    groupName: 'evm',\r\n    urlPathPattern: '/bind/request',\r\n    bodyParamNames: ['addresses'],\r\n    bodyType: 'properties',\r\n    getRequestUrlParams: getRequestUrlParams$4,\r\n    getRequestBody: getRequestBody$4,\r\n    serializeRequest: serializeRequest$4,\r\n    deserializeRequest: deserializeRequest$4,\r\n    deserializeResponse: deserializeResponse$4,\r\n};\r\n// Methods\r\nfunction getRequestUrlParams$4() {\r\n    return {};\r\n}\r\nfunction getRequestBody$4(request) {\r\n    return {\r\n        addresses: request.addresses.map(function (address) { return ({\r\n            blockchainType: address.blockchainType,\r\n            address: EvmAddress.create(address.address).checksum,\r\n        }); }),\r\n    };\r\n}\r\nfunction deserializeResponse$4(jsonResponse) {\r\n    return jsonResponse;\r\n}\r\nfunction serializeRequest$4(request) {\r\n    return {\r\n        addresses: request.addresses.map(function (address) { return ({\r\n            blockchainType: address.blockchainType,\r\n            address: EvmAddress.create(address.address).checksum,\r\n        }); }),\r\n    };\r\n}\r\nfunction deserializeRequest$4(jsonRequest) {\r\n    return {\r\n        addresses: jsonRequest.addresses.map(function (address) { return ({\r\n            blockchainType: address.blockchainType,\r\n            address: EvmAddress.create(address.address),\r\n        }); }),\r\n    };\r\n}\n\nvar verifyRemoveBindOperation = {\r\n    method: 'POST',\r\n    name: 'verifyRemoveBind',\r\n    id: 'verifyRemoveBind',\r\n    groupName: 'evm',\r\n    urlPathPattern: '/bind/remove/verify',\r\n    bodyParamNames: ['message', 'signature'],\r\n    bodyType: 'properties',\r\n    getRequestUrlParams: getRequestUrlParams$3,\r\n    getRequestBody: getRequestBody$3,\r\n    serializeRequest: serializeRequest$3,\r\n    deserializeRequest: deserializeRequest$3,\r\n    deserializeResponse: deserializeResponse$3,\r\n};\r\n// Methods\r\nfunction getRequestUrlParams$3() {\r\n    return {};\r\n}\r\nfunction getRequestBody$3(request) {\r\n    return {\r\n        message: request.message,\r\n        signature: request.signature,\r\n    };\r\n}\r\nfunction deserializeResponse$3(jsonResponse) {\r\n    return jsonResponse;\r\n}\r\nfunction serializeRequest$3(request) {\r\n    return {\r\n        message: request.message,\r\n        signature: request.signature,\r\n    };\r\n}\r\nfunction deserializeRequest$3(jsonRequest) {\r\n    return {\r\n        message: jsonRequest.message,\r\n        signature: jsonRequest.signature,\r\n    };\r\n}\n\nvar verifyRequestBindOperation = {\r\n    method: 'POST',\r\n    name: 'verifyRequestBind',\r\n    id: 'verifyRequestBind',\r\n    groupName: 'evm',\r\n    urlPathPattern: '/bind/request/verify',\r\n    bodyParamNames: ['verifications'],\r\n    bodyType: 'properties',\r\n    getRequestUrlParams: getRequestUrlParams$2,\r\n    getRequestBody: getRequestBody$2,\r\n    serializeRequest: serializeRequest$2,\r\n    deserializeRequest: deserializeRequest$2,\r\n    deserializeResponse: deserializeResponse$2,\r\n};\r\n// Methods\r\nfunction getRequestUrlParams$2() {\r\n    return {};\r\n}\r\nfunction getRequestBody$2(request) {\r\n    return {\r\n        verifications: request.verifications,\r\n    };\r\n}\r\nfunction deserializeResponse$2(jsonResponse) {\r\n    return jsonResponse;\r\n}\r\nfunction serializeRequest$2(request) {\r\n    return {\r\n        verifications: request.verifications,\r\n    };\r\n}\r\nfunction deserializeRequest$2(jsonRequest) {\r\n    return {\r\n        verifications: jsonRequest.verifications,\r\n    };\r\n}\n\nvar verifyChallengeSolanaOperation = {\r\n    method: 'POST',\r\n    name: 'verifyChallengeSolana',\r\n    id: 'verifyChallengeSolana',\r\n    groupName: 'solana',\r\n    urlPathPattern: '/challenge/verify/solana',\r\n    bodyParamNames: ['message', 'signature'],\r\n    bodyType: 'properties',\r\n    getRequestUrlParams: getRequestUrlParams$1,\r\n    getRequestBody: getRequestBody$1,\r\n    serializeRequest: serializeRequest$1,\r\n    deserializeRequest: deserializeRequest$1,\r\n    deserializeResponse: deserializeResponse$1,\r\n};\r\n// Methods\r\nfunction getRequestUrlParams$1() {\r\n    return {};\r\n}\r\nfunction getRequestBody$1(request) {\r\n    return {\r\n        message: request.message,\r\n        signature: request.signature,\r\n    };\r\n}\r\nfunction deserializeResponse$1(_a) {\r\n    var network = _a.network, jsonResponse = __rest(_a, [\"network\"]);\r\n    return __assign(__assign({}, jsonResponse), { solNetwork: SolNetwork.create(network), address: SolAddress.create(jsonResponse.address), expirationTime: maybe(jsonResponse.expirationTime, function (value) { return new Date(value); }), notBefore: maybe(jsonResponse.notBefore, function (value) { return new Date(value); }) });\r\n}\r\nfunction serializeRequest$1(request) {\r\n    return {\r\n        message: request.message,\r\n        signature: request.signature,\r\n    };\r\n}\r\nfunction deserializeRequest$1(jsonRequest) {\r\n    return {\r\n        message: jsonRequest.message,\r\n        signature: jsonRequest.signature,\r\n    };\r\n}\n\n/** The back channel challenge containing the id to store on the api and the message to be signed by the user */\r\nvar requestChallengeSolanaOperation = {\r\n    method: 'POST',\r\n    name: 'requestChallengeSolana',\r\n    id: 'requestChallengeSolana',\r\n    groupName: 'solana',\r\n    urlPathPattern: '/challenge/request/solana',\r\n    bodyParamNames: [\r\n        'domain',\r\n        'network',\r\n        'address',\r\n        'statement',\r\n        'uri',\r\n        'expirationTime',\r\n        'notBefore',\r\n        'resources',\r\n        'timeout',\r\n    ],\r\n    bodyType: 'properties',\r\n    getRequestUrlParams: getRequestUrlParams,\r\n    getRequestBody: getRequestBody,\r\n    serializeRequest: serializeRequest,\r\n    deserializeRequest: deserializeRequest,\r\n    deserializeResponse: deserializeResponse,\r\n};\r\n// Methods\r\nfunction getRequestUrlParams() {\r\n    return {};\r\n}\r\nfunction getRequestBody(request) {\r\n    return {\r\n        domain: request.domain,\r\n        network: SolNetwork.create(request.network).network,\r\n        address: SolAddress.create(request.address).address,\r\n        statement: request.statement,\r\n        uri: request.uri,\r\n        expirationTime: request.expirationTime,\r\n        notBefore: request.notBefore,\r\n        resources: request.resources,\r\n        timeout: request.timeout,\r\n    };\r\n}\r\nfunction deserializeResponse(jsonResponse) {\r\n    return jsonResponse;\r\n}\r\nfunction serializeRequest(request) {\r\n    return {\r\n        domain: request.domain,\r\n        network: SolNetwork.create(request.network).network,\r\n        address: SolAddress.create(request.address).address,\r\n        statement: request.statement,\r\n        uri: request.uri,\r\n        expirationTime: request.expirationTime,\r\n        notBefore: request.notBefore,\r\n        resources: request.resources,\r\n        timeout: request.timeout,\r\n    };\r\n}\r\nfunction deserializeRequest(jsonRequest) {\r\n    return {\r\n        domain: jsonRequest.domain,\r\n        network: SolNetwork.create(jsonRequest.network),\r\n        address: SolAddress.create(jsonRequest.address),\r\n        statement: jsonRequest.statement,\r\n        uri: jsonRequest.uri,\r\n        expirationTime: jsonRequest.expirationTime,\r\n        notBefore: jsonRequest.notBefore,\r\n        resources: jsonRequest.resources,\r\n        timeout: jsonRequest.timeout,\r\n    };\r\n}\n\nvar operations = [\r\n    requestChallengeSolanaOperation,\r\n    requestChallengeEvmOperation,\r\n    requestChallengeAptosOperation,\r\n    verifyChallengeSolanaOperation,\r\n    verifyChallengeEvmOperation,\r\n    verifyChallengeAptosOperation,\r\n    getAddressesOperation,\r\n    removeBindOperation,\r\n    requestBindOperation,\r\n    verifyRemoveBindOperation,\r\n    verifyRequestBindOperation,\r\n];\n\nexport { getAddressesOperation, operations, removeBindOperation, requestBindOperation, requestChallengeAptosOperation, requestChallengeEvmOperation, requestChallengeSolanaOperation, verifyChallengeAptosOperation, verifyChallengeEvmOperation, verifyChallengeSolanaOperation, verifyRemoveBindOperation, verifyRequestBindOperation };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}